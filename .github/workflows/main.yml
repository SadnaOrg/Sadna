# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  checks: write
  pull-requests: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: always()
        with:
          files: "test-results/**/*.xml"

      access-token:
        description: "github token"
        required: false
      path:
        description: "Glob to junit xml files"
        required: true
        default: "**/TEST-*.xml"
      includeSummary:
        description: "Include a summary annotation"
        required: true
        default: true
      numFailures:
        description: "Max number of failed tests to annotate"
        require: true
        default: 10
      debug:
        description: "Log debug messages"
        require: true
        default: false
      name:
        description: "Name of the check in the github actions UI"
        require: true
        default: "Junit Results"
          #Without access token
          - uses: KyleAure/junit-report-annotations-action@1.5
            if: always()
            with:
              name: "unit tests"
              path: "**/TEST-*.xml"